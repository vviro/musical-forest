<?xml version="1.0" encoding="UTF-8"?>

<!-- Parameters for Musical Forest. -->
<MusicalForest
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	
	<!--  
		### Forest parameters ###
		forestSize:                       Number of trees
		maxDepth:                         Maximum depth of the trees
		percentageOfRandomValuesPerFrame: Percentage of vlaues randomly picked from the test data per frame. Has to be in range [0,1].
		numOfRandomFeatures:              Number of randomly created feature candidates to be evaluated in each node while growing the forest. 
		thresholdCandidatesPerFeature:    Number of thresholds for each generated feature candidate.
		featureFactoryClass:              Class name of the feature to be used.
		entropyThreshold:                 Threshold for information gain of the winner feature in growing a node. If info gain is below 
		                                  or equal entropyThreshold, the node will become a leaf. 

		### Feature parameters ###
		xMin:         Min x deviation
		xMax:         Max x deviation
		yMin:         Min y deviation
		yMax:         Max y deviation
		thresholdMax: Maximum for threshold generation. Thresholds will be created in range [0, thresholdMax].
		
		### Multithreading parameters
		maxNumOfNodeThreads:       Maximum amount of extra threads that can help growing the forest. These threads
		                           take over the calculation of a complete node to its end. For effective
		                           calculation, at least each tree should have its own helping thread.
		threadWaitTime:            Milliseconds interval to check growth status in the forest.
	-->
	<Forest
		forestSize="1"
		maxDepth="4"
		percentageOfRandomValuesPerFrame="1.0"
		numOfRandomFeatures="100"
		thresholdCandidatesPerFeature="40"
		featureFactoryClass="de.lmu.dbs.ciaa.classifier.features.FeatureOnsetLR_2_9"
		entropyThreshold="0"
		
		xMin="0"
		xMax="0"
		yMin="0"
		yMax="0"
		thresholdMax="0"
		
		threadWaitTime="4000"
		
		maxNumOfEvalThreads="22"
		enableEvaluationThreads="true"

		maxNumOfNodeThreads="8"
		nodeThreadingThreshold="200000"
		
	></Forest>

	<!--  
		loadForest:                Load the forest from the node data in the working folder (must be grown first) 
		workingFolder:             Folder where the forest can save its node data. Can also be used to store test results etc.
		nodedataFilePrefix:        Prefix for the node data files (one will be created for each tree)
		frequencyTableFile:        Path to the frequency table file, usually located beneath the test data folders. The file
		                           holds a table of frequencies corresponding to the bins of the spectral transformation output.
		                    
		logProgress:               Show/log little progress info while growing.
		logNodeInfo:               Show/log more details for each node growed on the console.
		saveGainThresholdDiagrams: Save a gains/thresholds diagram in a png file for each nodeÂ´s winner feature, 
		                           up to the given depth. 
		saveNodeClassifications:   Save classifications for each node after test classification run, up to the 
		                           given depth. 
		debugThreadForking:        Show a message every time a new thread is created.
		debugThreadPolling:        Show thread polling and status information in regular intervals.
		
		
		testdataResults/forestremote_di24
		testforests/forest1_LR_dep14
	-->
	<General
		loadForest="false" 
		workingFolder="testdataResults/forestremote_di1"
		nodedataFilePrefix="nodedata"
		frequencyTableFile = "testdata/frequencies"
		
		logProgress="true"
		logNodeInfo="true"
		logWinnerThresholdCandidates="true"
		logFeatureCandidates="true"
		
		saveGainThresholdDiagrams="0"
		saveNodeClassifications="3"

		debugThreadPolling="true"
	></General>

	<!--  
		### CQT Parameters ###
		binsPerOctave:     Number of frequency bins per octave.
		fMin:              Minimum frequency.
		fMax:              Maximum frequency.
		step:              Samples per frame for windowing.
		threshold:         See class ConstantQTransformation.
		spread:            See class ConstantQTransformation.
		divideFFT:         See class ConstantQTransformation.
		cqtBufferLocation: Buffer folder for storing cqt kernel buffer files. See class ConstantQTransformation.
	-->
	<Transformation
		binsPerOctave="48"
		fMin="80"
		fMax="8000"
		step="256"
		threshold="0.05"
		spread="1.0"
		divideFFT="4.0"
		cqtBufferLocation="cqtbuff/"
	></Transformation>

</MusicalForest>
